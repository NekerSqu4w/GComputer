function init(computer)
    function clock_interface(self)
        //draw clock
        local clock_pos = self.pos:clone()
        clock_pos.x = clock_pos.x + 120
        clock_pos.y = clock_pos.y + self.size.y/2
    
        render.setColor(Color(120,120,120))
        render.setMaterial(nil)
        render.drawFilledCircle(clock_pos.x,clock_pos.y,80)
    
        render.setColor(Color(255,255,255))
        for i=1, 12 do
            local theta = (i/12) * (math.pi*2)
            render.drawLine(clock_pos.x + math.cos(theta) * 80,clock_pos.y + math.sin(theta) * 80,clock_pos.x + math.cos(theta) * 70,clock_pos.y + math.sin(theta) * 70)
            render.drawSimpleText(clock_pos.x + math.cos(-math.pi/2 + theta) * 90,clock_pos.y + math.sin(-math.pi/2 + theta) * 90,""..i,1,1)
        end
            
        render.setColor(Color(255,0,0))
        render.drawLine(clock_pos.x,clock_pos.y,clock_pos.x + math.cos(-math.pi/2 + (computer.time.sec/60)*(math.pi*2)) * 75,clock_pos.y + math.sin(-math.pi/2 + (computer.time.sec/60)*(math.pi*2)) * 75)
            
        render.setColor(Color(255,255,255))
        render.drawLine(clock_pos.x,clock_pos.y,clock_pos.x + math.cos(-math.pi/2 + (computer.time.min/60)*(math.pi*2)) * 60,clock_pos.y + math.sin(-math.pi/2 + (computer.time.min/60)*(math.pi*2)) * 60)
        render.drawLine(clock_pos.x,clock_pos.y,clock_pos.x + math.cos(-math.pi/2 + (computer.time.hour/12)*(math.pi*2)) * 40,clock_pos.y + math.sin(-math.pi/2 + (computer.time.hour/12)*(math.pi*2)) * 40)
    end
    
    computer.OpenClockMenu = SFUi.checkbox(computer.GComputer_windows, Vector(0,0), Vector(120,45), "", false, function(checked)
        if not computer.app.ClockMenu then
            computer.app.ClockMenu = SFUi.window(Vector(1024 - 400-24, 512 - 256-55), Vector(400, 256), "Clock", true, false, function()
                computer.OpenClockMenu.checked = false
                computer.app.ClockMenu.visible = false
            end)
            
            computer.app.ClockMenu.add_draw = clock_interface

            computer.ClockUTCList = SFUi.list(computer.app.ClockMenu, Vector(240, 40), Vector(150, 256-80), "UTC:", computer.ClockUTCOffset, function(choose_utc) computer.utc_id = choose_utc end)
            computer.ClockUTCList.value = computer.utc_id
            computer.Desktop_gui:addComponent(computer.app.ClockMenu)
        else
            computer.app.ClockMenu.visible = checked
        end
    end)
end

function render_menu(computer,w,h)
    computer.OpenClockMenu.pos = Vector(w-120+2,h-45/2-7)

    if computer.OpenClockMenu.checked then
        computer.OpenClockMenu.hover = true
    end
    
    //draw time on start bar
    render.setColor(Color(255,255,255))
    render.drawSimpleText(w - 15,h - 45/2-10, "" .. format_hour(computer.time),2,1)
    render.drawSimpleText(w - 15,h - 45/2+8, "" .. format_date(computer.time),2,1)
end

return {init=init,render=render_menu}