function init(computer)
    function task_manager_interface(self)
        local task_usage = {
            ["Cpu"] = {us=computer.cpu.usage,max=computer.cpu.max,suffix="("..computer.cpu.usage.."/"..computer.cpu.max..")"},
            ["Ram"] = {us=computer.ram.usage,max=computer.ram.max,suffix="("..string.niceSize(computer.ram.usage).."/"..string.niceSize(computer.ram.max)..")"}
        }

        local i = 0
        for id, info in pairs(task_usage) do
            i = i + 1
            
            render.setColor(Color(255,255,255))
            render.drawRect(self.mins.x + 4 + 40,self.mins.y + 4 + 15 - 40 + i * 40,256,30)

            render.setColor(computer.main_color)
            render.drawRect(self.mins.x + 4 + 40,self.mins.y + 4 + 15 - 40 + i * 40,(info.us/info.max) * 256,30)
            render.drawSimpleText(self.mins.x + 10,self.mins.y + 4 + 15 - 25 + i * 40,id .. ":",0,1)

            render.setColor(Color(0,0,0))
            render.drawSimpleText(self.mins.x + 10 + 40,self.mins.y + 4 + 15 - 25 + i * 40,""..math.round((info.us/info.max)*100) .. "% " .. info.suffix,0,1)
        end
        

        render.setColor(Color(255,255,255))
        render.drawSimpleText(self.mins.x + 4 + 80 + 256,self.mins.y + 4 + 20,"Manage app:",0,1)

        local i = 0
        for id, app in pairs(computer.app) do
            if not self.end_task_button[id] then
                self.end_task_button[id] = SFUi.button(self, Vector(0,0), Vector(70, 20), "End task", function()
                    app.visible = false
                end)
                computer.Desktop_gui:addComponent(self.end_task_button[id])
            end

            if app.visible then
                i = i + 1
                render.setColor(Color(255,255,255))
                render.drawRect(self.mins.x + 4 + 70 + 256,self.mins.y + 4 + 10 + i * 25,256-80,20)
                
                render.setColor(Color(0,0,0))
                render.drawSimpleText(self.mins.x + 4 + 80 + 256,self.mins.y + 4 + 20 + i * 25,app.title,0,1)
            end

            self.end_task_button[id].visible = app.visible
            //doesn't work for some reason
            if self.visible == false then
                self.end_task_button[id].visible = false
            end
            self.end_task_button[id].pos = Vector(600 - 80, 4 + 10 + i * 25)
        end
    end

    computer.OpenTaskManager = SFUi.checkbox(computer.GComputer_windows, Vector(0,0), Vector(45,45), "", false, function(checked)
        if not computer.app.TaskManagerMenu then
            computer.app.TaskManagerMenu = SFUi.window(Vector(16, 16), Vector(600, 420), "Task manager", true, false, function()
                computer.OpenTaskManager.checked = false
                computer.app.TaskManagerMenu.visible = false
            end)
            
            computer.app.TaskManagerMenu.end_task_button = {}
            
            computer.app.TaskManagerMenu.add_draw = task_manager_interface
            computer.Desktop_gui:addComponent(computer.app.TaskManagerMenu)
        else
            computer.app.TaskManagerMenu.visible = checked
        end
    end)

    computer.OpenTaskManager.add_draw = function(self)
        local s = self.size.y-10
        
        render.setMaterial(computer.material.task_manager)
        render.setColor(Color(255,255,255))
        render.drawTexturedRect(self.pos.x+3,self.pos.y-10,s,s)
    end
end

function render_menu(computer,w,h)
    computer.OpenTaskManager.pos = Vector(60,h-45/2-7)
    
    if computer.OpenTaskManager.checked then
        computer.OpenTaskManager.hover = true
    end
end

return {init=init,render=render_menu}